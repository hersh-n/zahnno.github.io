define({ "api": [  {    "group": "Orders",    "type": "delete",    "url": "localhost:8000/api/orders/:order_number/line_items/:line_item_id",    "title": "Delete A Product From Order",    "header": {      "examples": [        {          "title": "Header-Example: ",          "content": "X-Spree-Token : {{user_token}}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success-Response: ",          "content": "Status: 204",          "type": "json"        }      ]    },    "error": {      "examples": [        {          "title": "Error-Response:",          "content": "Status: 404",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "./orders.rb",    "groupTitle": "Orders",    "name": "DeleteLocalhost8000ApiOrdersOrder_numberLine_itemsLine_item_id"  },  {    "group": "Orders",    "type": "get",    "url": "localhost:8000/api/orders/current.json",    "title": "Get Active Order",    "header": {      "examples": [        {          "title": "Header-Example: ",          "content": "X-Spree-Token : {{user_token}}",          "type": "json"        }      ]    },    "success": {      "fields": {        "Success: 200": [          {            "group": "Success: 200",            "type": "Object",            "optional": false,            "field": "Order",            "description": "<p>{ &quot;id&quot;: 7, &quot;number&quot;: &quot;R726717097&quot;, &quot;item_total&quot;: &quot;0.0&quot;, &quot;total&quot;: &quot;0.0&quot;, &quot;state&quot;: &quot;cart&quot;, &quot;adjustment_total&quot;: &quot;0.0&quot;, &quot;user_id&quot;: 3, &quot;created_at&quot;: &quot;2016-02-10T16:19:11.220Z&quot;, ...etc...}</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "./orders.rb",    "groupTitle": "Orders",    "name": "GetLocalhost8000ApiOrdersCurrentJson"  },  {    "group": "Orders",    "type": "get",    "url": "localhost:8000/api/orders/:order_number.json",    "title": "Get Order",    "header": {      "examples": [        {          "title": "Header-Example: ",          "content": "X-Spree-Token : {{user_token}}",          "type": "json"        }      ]    },    "success": {      "fields": {        "Success: 201": [          {            "group": "Success: 201",            "type": "Object",            "optional": false,            "field": "Order",            "description": "<p>{ &quot;id&quot;: 7, &quot;number&quot;: &quot;R726717097&quot;, &quot;item_total&quot;: &quot;0.0&quot;, &quot;total&quot;: &quot;0.0&quot;, &quot;state&quot;: &quot;cart&quot;, &quot;adjustment_total&quot;: &quot;0.0&quot;, &quot;user_id&quot;: 3, &quot;created_at&quot;: &quot;2016-02-10T16:19:11.220Z&quot;, &quot;updated_at&quot;: &quot;2016-02-10T16:19:11.773Z&quot;, &quot;completed_at&quot;: null, &quot;payment_total&quot;: &quot;0.0&quot;, &quot;shipment_state&quot;: null, &quot;payment_state&quot;: null, &quot;email&quot;: &quot;nicole.rego@galepartners.com&quot;, &quot;special_instructions&quot;: null, &quot;display_item_total&quot;: &quot;$0.00&quot;, &quot;total_quantity&quot;: 0, &quot;display_total&quot;: &quot;$0.00&quot;, ..etc...}</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "./orders.rb",    "groupTitle": "Orders",    "name": "GetLocalhost8000ApiOrdersOrder_numberJson"  },  {    "group": "Orders",    "type": "post",    "url": "localhost:8000/api/orders.json",    "title": "Create Order With Product",    "header": {      "examples": [        {          "title": "Header-Example: ",          "content": "X-Spree-Token : {{user_token}}",          "type": "json"        },        {          "title": "Body-Example: ",          "content": "\n{\"order\": { \"line_items\": [ { \"variant_id\":1, \"quantity\": 5 } ] } }",          "type": "json"        }      ]    },    "success": {      "fields": {        "Success: 201": [          {            "group": "Success: 201",            "type": "Object",            "optional": false,            "field": "Order",            "description": "<p>{ &quot;id&quot;: 7, &quot;number&quot;: &quot;R726717097&quot;, &quot;item_total&quot;: &quot;0.0&quot;, &quot;total&quot;: &quot;0.0&quot;, &quot;state&quot;: &quot;cart&quot;, &quot;adjustment_total&quot;: &quot;0.0&quot;, &quot;user_id&quot;: 3, &quot;created_at&quot;: &quot;2016-02-10T16:19:11.220Z&quot;, &quot;updated_at&quot;: &quot;2016-02-10T16:19:11.773Z&quot;, &quot;completed_at&quot;: null, &quot;payment_total&quot;: &quot;0.0&quot;, &quot;shipment_state&quot;: null, &quot;payment_state&quot;: null, &quot;email&quot;: &quot;nicole.rego@galepartners.com&quot;, &quot;special_instructions&quot;: null, &quot;display_item_total&quot;: &quot;$0.00&quot;, &quot;total_quantity&quot;: 0, &quot;display_total&quot;: &quot;$0.00&quot;, ..etc...}</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "./orders.rb",    "groupTitle": "Orders",    "name": "PostLocalhost8000ApiOrdersJson"  },  {    "group": "Orders",    "type": "post",    "url": "localhost:8000/api/orders/:order_number/line_items?.json",    "title": "Add Product To Order",    "header": {      "examples": [        {          "title": "Header-Example: ",          "content": "X-Spree-Token : {{user_token}}",          "type": "json"        },        {          "title": "Body-Example:",          "content": "{ \"line_item\": { \"variant_id\":1, \"quantity\": 5 } }",          "type": "json"        }      ]    },    "success": {      "fields": {        "Success: 201": [          {            "group": "Success: 201",            "type": "Object",            "optional": false,            "field": "line_item",            "description": "<p>@line_item</p>"          }        ]      }    },    "error": {      "examples": [        {          "title": "Error-Response:",          "content": "{ \"error\": \"The resource you were looking for could not be found.\" }",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "./orders.rb",    "groupTitle": "Orders",    "name": "PostLocalhost8000ApiOrdersOrder_numberLine_itemsJson"  },  {    "group": "Orders",    "type": "put",    "url": "localhost:8000/api/orders/empty.json",    "title": "Delete Order",    "header": {      "examples": [        {          "title": "Header-Example: ",          "content": "X-Spree-Token : {{user_token}}",          "type": "json"        }      ]    },    "success": {      "examples": [        {          "title": "Success-Response: ",          "content": "Status: 204",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "./orders.rb",    "groupTitle": "Orders",    "name": "PutLocalhost8000ApiOrdersEmptyJson"  },  {    "group": "Orders",    "type": "put",    "url": "localhost:8000/api/orders/:order_number/apply_coupon_code",    "title": "Apply Coupon Code To Order",    "header": {      "examples": [        {          "title": "Header-Example: ",          "content": "X-Spree-Token : {{user_token}}",          "type": "json"        },        {          "title": "Body-Example:",          "content": "{\"coupon_code\": \"15OFF\"}",          "type": "json"        }      ]    },    "success": {      "fields": {        "Success: 200": [          {            "group": "Success: 200",            "type": "Object",            "optional": false,            "field": "Success",            "description": "<p>{ &quot;success&quot;: &quot;The coupon code was successfully applied to your order.&quot;, &quot;error&quot;: null, &quot;successful&quot;: true, &quot;status_code&quot;: &quot;coupon_code_applied&quot; }</p>"          }        ]      }    },    "error": {      "examples": [        {          "title": "Error-Response:",          "content": "Status: 422",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "./orders.rb",    "groupTitle": "Orders",    "name": "PutLocalhost8000ApiOrdersOrder_numberApply_coupon_code"  },  {    "group": "Orders",    "type": "put",    "url": "localhost:8000/api/orders/:order_number/line_items/:line_item_id",    "title": "Change Quantity Of Product In Order",    "header": {      "examples": [        {          "title": "Header-Example: ",          "content": "X-Spree-Token : {{user_token}}",          "type": "json"        },        {          "title": "Body-Example:",          "content": "{ \"line_item\": { \"variant_id\": 1, \"quantity\": 3 } }",          "type": "json"        }      ]    },    "success": {      "fields": {        "Success: 200": [          {            "group": "Success: 200",            "type": "Object",            "optional": false,            "field": "line_item",            "description": "<p>@line_item</p>"          }        ]      }    },    "error": {      "examples": [        {          "title": "Error-Response:",          "content": "Status: 404",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "./orders.rb",    "groupTitle": "Orders",    "name": "PutLocalhost8000ApiOrdersOrder_numberLine_itemsLine_item_id"  },  {    "group": "Orders",    "type": "put",    "url": "localhost:8000/api/orders/:order_number/remove_coupon_code",    "title": "Remove Coupon Code From Order",    "header": {      "examples": [        {          "title": "Header-Example: ",          "content": "X-Spree-Token : {{user_token}}",          "type": "json"        },        {          "title": "Body-Example:",          "content": "{\"coupon_code\": \"15OFF\"}",          "type": "json"        }      ]    },    "success": {      "fields": {        "Success: 204": [          {            "group": "Success: 204",            "type": "Object",            "optional": false,            "field": "Success",            "description": "<p>{ &quot;message&quot;: &quot;Successfully removed promotion code.&quot;}</p>"          }        ]      }    },    "error": {      "examples": [        {          "title": "Error-Response:",          "content": "Status: 404",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "./orders.rb",    "groupTitle": "Orders",    "name": "PutLocalhost8000ApiOrdersOrder_numberRemove_coupon_code"  },  {    "type": "get",    "url": "localhost:8000/api/products.json",    "title": "Request Products information",    "header": {      "examples": [        {          "title": "Header-Example: ",          "content": "X-Spree-Token : {{spree_api_key}}",          "type": "json"        }      ]    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "Product",            "description": "<p>{ &quot;count&quot;: 2, &quot;total_count&quot;: 2, &quot;current_page&quot;: 1, &quot;per_page&quot;: 25, &quot;pages&quot;: 1, &quot;products&quot;: [ { &quot;id&quot;: 1, &quot;name&quot;: &quot;Carrot&quot;, &quot;description&quot;: &quot;&quot;, &quot;price&quot;: &quot;100.0&quot;, &quot;display_price&quot;: &quot;$100.00&quot;, ...etc..}</p>"          }        ]      }    },    "name": "GetProducts",    "group": "Products",    "version": "0.0.0",    "filename": "./products.rb",    "groupTitle": "Products"  },  {    "type": "get",    "url": "localhost:8000/api/products/:id.json",    "title": "Request a Product",    "header": {      "examples": [        {          "title": "Header-Example: ",          "content": "X-Spree-Token : {{spree_api_key}}",          "type": "json"        }      ]    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "Product",            "description": "<p>{ &quot;count&quot;: 2, &quot;total_count&quot;: 2, &quot;current_page&quot;: 1, &quot;per_page&quot;: 25, &quot;pages&quot;: 1, &quot;products&quot;: [ { &quot;id&quot;: 1, &quot;name&quot;: &quot;Carrot&quot;, &quot;description&quot;: &quot;&quot;, &quot;price&quot;: &quot;100.0&quot;, &quot;display_price&quot;: &quot;$100.00&quot;, ...etc..}</p>"          }        ]      }    },    "name": "GetProducts",    "group": "Products",    "version": "0.0.0",    "filename": "./products.rb",    "groupTitle": "Products"  },  {    "group": "Taxonomies",    "type": "get",    "url": "localhost:8000/api/taxonomies",    "title": "Request Taxonomies information",    "header": {      "examples": [        {          "title": "Header-Example: ",          "content": "X-Spree-Token : {{admin_token}}",          "type": "json"        }      ]    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "Taxons",            "description": "<p>{ &quot;count&quot;: 1, &quot;current_page&quot;: 1, &quot;pages&quot;: 1, &quot;taxonomies&quot;: [ { &quot;id&quot;: 1, &quot;name&quot;: &quot;Store&quot;, &quot;root&quot;: { &quot;id&quot;: 1, &quot;name&quot;: &quot;Store&quot;, &quot;pretty_name&quot;: &quot;Store&quot;, &quot;permalink&quot;: &quot;store&quot;, &quot;parent_id&quot;: null, &quot;taxonomy_id&quot;: 1, &quot;description&quot;: null, &quot;icon&quot;: &quot;/assets/default_taxon.png&quot;, &quot;taxons&quot;: [ { &quot;id&quot;: 2, &quot;name&quot;: &quot;Cleanse&quot;, &quot;pretty_name&quot;: &quot;Store -&gt; Cleanse&quot;, &quot;permalink&quot;: &quot;store/cleanse&quot;, &quot;parent_id&quot;: 1, &quot;taxonomy_id&quot;: 1, &quot;description&quot;: &quot;&quot;, &quot;icon&quot;: &quot;/spree/taxons/2/original/Invigoration-cleanse.png?1454600265&quot; }, { &quot;id&quot;: 3, &quot;name&quot;: &quot;Juices&quot;, &quot;pretty_name&quot;: &quot;Store -&gt; Juices&quot;, &quot;permalink&quot;: &quot;store/new-node&quot;, &quot;parent_id&quot;: 1, &quot;taxonomy_id&quot;: 1, &quot;description&quot;: &quot;&quot;, &quot;icon&quot;: &quot;/assets/default_taxon.png&quot; } ] } } ] }</p>"          }        ]      }    },    "name": "GetTaxonomies",    "version": "0.0.0",    "filename": "./taxonomies.rb",    "groupTitle": "Taxonomies"  },  {    "group": "Taxonomies",    "type": "get",    "url": "localhost:8000/api/taxonomies/:id/taxons",    "title": "Request Taxon information",    "header": {      "examples": [        {          "title": "Header-Example: ",          "content": "X-Spree-Token : {{admin_token}}",          "type": "json"        }      ]    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "Taxon",            "description": "<p>{{ &quot;count&quot;: 2, &quot;total_count&quot;: 2, &quot;current_page&quot;: 1, &quot;per_page&quot;: 25, &quot;pages&quot;: 1, &quot;taxons&quot;: [ { &quot;taxons&quot;: [], &quot;id&quot;: 2, &quot;name&quot;: &quot;Cleanse&quot;, &quot;pretty_name&quot;: &quot;Store -&gt; Cleanse&quot;, &quot;permalink&quot;: &quot;store/cleanse&quot;, &quot;parent_id&quot;: 1, &quot;taxonomy_id&quot;: 1, &quot;description&quot;: &quot;&quot;, &quot;icon&quot;: &quot;/spree/taxons/2/original/Invigoration-cleanse.png?1454600265&quot; }, { &quot;taxons&quot;: [], &quot;id&quot;: 3, &quot;name&quot;: &quot;Juices&quot;, &quot;pretty_name&quot;: &quot;Store -&gt; Juices&quot;, &quot;permalink&quot;: &quot;store/new-node&quot;, &quot;parent_id&quot;: 1, &quot;taxonomy_id&quot;: 1, &quot;description&quot;: &quot;&quot;, &quot;icon&quot;: &quot;/assets/default_taxon.png&quot; } ] }</p>"          }        ]      }    },    "name": "GetTaxons",    "version": "0.0.0",    "filename": "./taxonomies.rb",    "groupTitle": "Taxonomies"  },  {    "type": "get",    "url": "/user/:id",    "title": "Read data of a User",    "version": "0.3.0",    "name": "GetUser",    "group": "User",    "permission": [      {        "name": "admin",        "title": "Admin access rights needed.",        "description": "<p>Optionally you can write here further Informations about the permission.</p> <p>An &quot;apiDefinePermission&quot;-block can have an &quot;apiVersion&quot;, so you can attach the block to a specific version.</p>"      }    ],    "description": "<p>Compare Verison 0.3.0 with 0.2.0 and you will see the green markers with new items in version 0.3.0 and red markers with removed items since 0.2.0.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Number",            "optional": false,            "field": "id",            "description": "<p>The Users-ID.</p>"          }        ]      }    },    "examples": [      {        "title": "Example usage:",        "content": "curl -i http://localhost/user/4711",        "type": "json"      }    ],    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "id",            "description": "<p>The Users-ID.</p>"          },          {            "group": "Success 200",            "type": "Date",            "optional": false,            "field": "registered",            "description": "<p>Registration Date.</p>"          },          {            "group": "Success 200",            "type": "Date",            "optional": false,            "field": "name",            "description": "<p>Fullname of the User.</p>"          },          {            "group": "Success 200",            "type": "String[]",            "optional": false,            "field": "nicknames",            "description": "<p>List of Users nicknames (Array of Strings).</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "profile",            "description": "<p>Profile data (example for an Object)</p>"          },          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "profile.age",            "description": "<p>Users age.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "profile.image",            "description": "<p>Avatar-Image.</p>"          },          {            "group": "Success 200",            "type": "Object[]",            "optional": false,            "field": "options",            "description": "<p>List of Users options (Array of Objects).</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "options.name",            "description": "<p>Option Name.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "options.value",            "description": "<p>Option Value.</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "NoAccessRight",            "description": "<p>Only authenticated Admins can access the data.</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "UserNotFound",            "description": "<p>The <code>id</code> of the User was not found.</p>"          }        ]      },      "examples": [        {          "title": "Response (example):",          "content": "HTTP/1.1 401 Not Authenticated\n{\n  \"error\": \"NoAccessRight\"\n}",          "type": "json"        }      ]    },    "filename": "./node_modules/apidoc/example/example.js",    "groupTitle": "User"  },  {    "type": "get",    "url": "/user/:id",    "title": "Read data of a User",    "version": "0.2.0",    "name": "GetUser",    "group": "User",    "permission": [      {        "name": "admin",        "title": "This title is visible in version 0.1.0 and 0.2.0",        "description": ""      }    ],    "description": "<p>Here you can describe the function. Multilines are possible.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>The Users-ID.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>The Users-ID.</p>"          },          {            "group": "Success 200",            "type": "Date",            "optional": false,            "field": "name",            "description": "<p>Fullname of the User.</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "UserNotFound",            "description": "<p>The <code>id</code> of the User was not found.</p>"          }        ]      }    },    "filename": "./node_modules/apidoc/example/_apidoc.js",    "groupTitle": "User"  },  {    "type": "get",    "url": "/user/:id",    "title": "Read data of a User",    "version": "0.1.0",    "name": "GetUser",    "group": "User",    "permission": [      {        "name": "admin",        "title": "This title is visible in version 0.1.0 and 0.2.0",        "description": ""      }    ],    "description": "<p>Here you can describe the function. Multilines are possible.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>The Users-ID.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>The Users-ID.</p>"          },          {            "group": "Success 200",            "type": "Date",            "optional": false,            "field": "name",            "description": "<p>Fullname of the User.</p>"          }        ]      }    },    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "UserNotFound",            "description": "<p>The error description text in version 0.1.0.</p>"          }        ]      }    },    "filename": "./node_modules/apidoc/example/_apidoc.js",    "groupTitle": "User"  },  {    "type": "post",    "url": "/user",    "title": "Create a new User",    "version": "0.3.0",    "name": "PostUser",    "group": "User",    "permission": [      {        "name": "none"      }    ],    "description": "<p>In this case &quot;apiErrorStructure&quot; is defined and used. Define blocks with params that will be used in several functions, so you dont have to rewrite them.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the User.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "Number",            "optional": false,            "field": "id",            "description": "<p>The new Users-ID.</p>"          }        ]      }    },    "filename": "./node_modules/apidoc/example/example.js",    "groupTitle": "User",    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "NoAccessRight",            "description": "<p>Only authenticated Admins can access the data.</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "UserNameTooShort",            "description": "<p>Minimum of 5 characters required.</p>"          }        ]      },      "examples": [        {          "title": "Response (example):",          "content": "HTTP/1.1 400 Bad Request\n{\n  \"error\": \"UserNameTooShort\"\n}",          "type": "json"        }      ]    }  },  {    "type": "post",    "url": "/user",    "title": "Create a User",    "version": "0.2.0",    "name": "PostUser",    "group": "User",    "permission": [      {        "name": "none"      }    ],    "description": "<p>In this case &quot;apiErrorStructure&quot; is defined and used. Define blocks with params that will be used in several functions, so you dont have to rewrite them.</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the User.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>The Users-ID.</p>"          }        ]      }    },    "filename": "./node_modules/apidoc/example/_apidoc.js",    "groupTitle": "User",    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "NoAccessRight",            "description": "<p>Only authenticated Admins can access the data.</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "UserNameTooShort",            "description": "<p>Minimum of 5 characters required.</p>"          }        ]      },      "examples": [        {          "title": "Response (example):",          "content": "HTTP/1.1 400 Bad Request\n{\n  \"error\": \"UserNameTooShort\"\n}",          "type": "json"        }      ]    }  },  {    "type": "put",    "url": "/user/:id",    "title": "Change a User",    "version": "0.3.0",    "name": "PutUser",    "group": "User",    "permission": [      {        "name": "none"      }    ],    "description": "<p>This function has same errors like POST /user, but errors not defined again, they were included with &quot;apiErrorStructure&quot;</p>",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "name",            "description": "<p>Name of the User.</p>"          }        ]      }    },    "filename": "./node_modules/apidoc/example/example.js",    "groupTitle": "User",    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "NoAccessRight",            "description": "<p>Only authenticated Admins can access the data.</p>"          },          {            "group": "Error 4xx",            "optional": false,            "field": "UserNameTooShort",            "description": "<p>Minimum of 5 characters required.</p>"          }        ]      },      "examples": [        {          "title": "Response (example):",          "content": "HTTP/1.1 400 Bad Request\n{\n  \"error\": \"UserNameTooShort\"\n}",          "type": "json"        }      ]    }  },  {    "group": "Users",    "type": "get",    "url": "localhost:8000/api/users",    "title": "Get Users",    "header": {      "examples": [        {          "title": "Header-Example: ",          "content": "X-Spree-Token : {{admin_token}}",          "type": "json"        }      ]    },    "success": {      "fields": {        "Success: 200": [          {            "group": "Success: 200",            "type": "Object",            "optional": false,            "field": "User",            "description": "<p>@users</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "./users.rb",    "groupTitle": "Users",    "name": "GetLocalhost8000ApiUsers"  },  {    "group": "Users",    "type": "get",    "url": "localhost:8000/api/users/:id",    "title": "Get User",    "header": {      "examples": [        {          "title": "Header-Example: ",          "content": "X-Spree-Token : {{admin_token}}",          "type": "json"        }      ]    },    "success": {      "fields": {        "Success: 200": [          {            "group": "Success: 200",            "type": "Object",            "optional": false,            "field": "User",            "description": "<p>@user</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "./users.rb",    "groupTitle": "Users",    "name": "GetLocalhost8000ApiUsersId"  },  {    "group": "Users",    "description": "<p>Note</p> <p>The guest user is excluded from the 15min token check and will not be timed out as a result. To test this, create a new guest user and check order history of that user after 15 mins. The user shouldn't be timed out at this point.</p>",    "type": "post",    "url": "localhost:80000/api/users.json",    "title": "Create User",    "header": {      "examples": [        {          "title": "Header-Example: ",          "content": "X-Spree-Token : {{admin_token}}",          "type": "json"        },        {          "title": "Body-Example:",          "content": "{\"user\": {\"password\": \"temppwd\", \"email\": \"lilwayne@example.com\", \"username\": \"zapper\", \"phone\": \"6476544567\"}}",          "type": "json"        }      ]    },    "success": {      "fields": {        "Success: 201": [          {            "group": "Success: 201",            "type": "Object",            "optional": false,            "field": "User",            "description": "<p>@user { &quot;id&quot;: 5, &quot;email&quot;: null, &quot;created_at&quot;: &quot;2016-02-08T20:03:39.206Z&quot;, &quot;updated_at&quot;: &quot;2016-02-08T20:03:39.215Z&quot;, &quot;spree_api_key&quot;: &quot;7f4303d8e835e4a47e77a04af2793443fe5e0bebfd44b873&quot;, &quot;bill_address&quot;: null, &quot;ship_address&quot;: null, &quot;username&quot;: null, &quot;phone&quot;: null}</p>"          }        ]      }    },    "error": {      "examples": [        {          "title": "Error-Response:",          "content": "Status: 403",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "./users.rb",    "groupTitle": "Users",    "name": "PostLocalhost80000ApiUsersJson"  },  {    "group": "Users",    "type": "post",    "url": "localhost:8000/api/users.json",    "title": "Signup",    "header": {      "examples": [        {          "title": "Header-Example: ",          "content": "X-Spree-Token : {{admin_token}}",          "type": "json"        },        {          "title": "Body-Example:",          "content": "{\"spree_user\": {\"email\": \"xyz@gmail.com\", \"password\": \"123456\"}}",          "type": "json"        }      ]    },    "success": {      "fields": {        "Success: 200": [          {            "group": "Success: 200",            "type": "Object",            "optional": false,            "field": "User",            "description": "<p>@user { &quot;id&quot;: 9, &quot;email&quot;: &quot;xyz@gmail.com&quot;, &quot;created_at&quot;: &quot;2016-02-08T15:49:25.869Z&quot;, &quot;updated_at&quot;: &quot;2016-02-08T15:49:25.891Z&quot;, &quot;spree_api_key&quot;: &quot;157a0c1e8e03a56dbd150611b69ce7385e890f2ee07bbdbb&quot;, &quot;bill_address&quot;: null, &quot;ship_address&quot;: null, name: &quot;John Doe&quot; }</p>"          }        ]      }    },    "error": {      "examples": [        {          "title": "Error-Response:",          "content": "Status: 403",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "./users.rb",    "groupTitle": "Users",    "name": "PostLocalhost8000ApiUsersJson"  },  {    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "optional": false,            "field": "varname1",            "description": "<p>No type.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "varname2",            "description": "<p>With type.</p>"          }        ]      }    },    "type": "",    "url": "",    "version": "0.0.0",    "filename": "./doc/main.js",    "group": "_Users_patrickzanowski_Documents_Unchained_api_docs_zahnno_github_io_ApiDoc_doc_main_js",    "groupTitle": "_Users_patrickzanowski_Documents_Unchained_api_docs_zahnno_github_io_ApiDoc_doc_main_js",    "name": ""  },  {    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "optional": false,            "field": "varname1",            "description": "<p>No type.</p>"          },          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "varname2",            "description": "<p>With type.</p>"          }        ]      }    },    "type": "",    "url": "",    "version": "0.0.0",    "filename": "./node_modules/apidoc/template/main.js",    "group": "_Users_patrickzanowski_Documents_Unchained_api_docs_zahnno_github_io_ApiDoc_node_modules_apidoc_template_main_js",    "groupTitle": "_Users_patrickzanowski_Documents_Unchained_api_docs_zahnno_github_io_ApiDoc_node_modules_apidoc_template_main_js",    "name": ""  }] });
